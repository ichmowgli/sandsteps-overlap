import { type NextPage } from "next";
import Head from "next/head";
import type { FormEventHandler, MutableRefObject} from "react";
import { useRef, useState } from "react";

import { api } from "../utils/api";

const TextInput = ({
  label,
  placeholder,
  inputRef,
}: {
  label: string;
  placeholder: string;
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  inputRef: MutableRefObject<any>
}) => {
  return (
    <div>
      <label htmlFor="price" className="block text-sm font-medium text-white">
        {label}
      </label>
      <div className="relative mt-1 rounded-md shadow-sm">
        <input
          type="text"
          name="price"
          id="price"
          className="block w-full rounded-md border-gray-300 px-3 placeholder-shown:border-gray-500 focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
          placeholder={placeholder}
          ref={inputRef}
        />
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  const calculateOverlap = api.overlap.calculate.useMutation();

  const firstRef = useRef<HTMLInputElement>();
  const secondRef = useRef<HTMLInputElement>();

  const [isLoading, setIsLoading] = useState(false);
  const [overlapResponse, setOverlapResponse] = useState<{ amount: number; positions: number[][]; } | null>(null);

  const handleFormSubmit: FormEventHandler<HTMLFormElement> = (e) => {
    e.preventDefault();

    if(!firstRef.current || !secondRef.current) {
      return;
    }

    setIsLoading(true);
    const data = {
      first: firstRef.current.value,
      second: secondRef.current.value,
    }

    calculateOverlap.mutate(data, {
      onSettled() {
        setIsLoading(false);
      },
      onSuccess(data) {
        console.log({ data })
        setOverlapResponse(data);
      },
    });
  }

  return (
    <>
      <Head>
        <title>Overlap counter</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Find <span className="text-[hsl(280,100%,70%)]">overlap</span> of
            words
          </h1>
            <form onSubmit={handleFormSubmit} className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
              <TextInput label="First" placeholder="First" inputRef={firstRef} />
              <TextInput label="Second" placeholder="Second" inputRef={secondRef} />

              <button type="submit">Submit form</button>
            </form>

            {
              overlapResponse ? (<div>
                Overlap response: {JSON.stringify(overlapResponse)}
              </div>) : <></>
            }
        </div>
      </main>
    </>
  );
};

export default Home;
